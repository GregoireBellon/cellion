---
- name: Setup the app 
  hosts: all
  vars_files:
    - vars.yml
  # roles:
  #   - {role: geerlingguy.pip, become: true}
  #   - {role: geerlingguy.docker, become: true}
  
  tasks:
    - name: Logout from ghcr to be able to pull public image
      community.docker.docker_login:
        registry: "{{ cellion_docker_registry }}"
        state: absent

    - name: Start the docker-compose
      community.docker.docker_compose_v2:
        pull: "always"
        recreate: "always"
        project_name: cellion
        definition:
            services:
              back:
                image: "{{ cellion_docker_registry }}/{{ cellion_docker_back_image }}"
                environment:
                  - "DATABASE_URL=/usr/src/app/{{ cellion_db_name }}"
                  - "RUST_LOG={{ cellion_back_log_level }}"
                volumes:
                  - "{{ cellion_db_folder }}/{{ cellion_db_name }}:/usr/src/app/{{ cellion_db_name }}"
              front:
                image: "{{ cellion_docker_registry }}/{{ cellion_docker_front_image }}"
                environment:
                  - BACK_REF=back
                ports:
                  - "{{ cellion_host }}:{{ cellion_port }}:80"
                depends_on:
                  - back
        register: output
        
    - name: Show results
      ansible.builtin.debug:
        var: output

    - name: Verify that web and db services are running
      ansible.builtin.assert:
        that:
          - "output.services.web.flask_web_1.state.running"
          - "output.services.db.flask_db_1.state.running"

              